"""
Concrete prompt template for critique tasks.
Used when the assistant is asked to evaluate and provide constructive feedback.
"""

from metis.prompts.templates.base_prompt_template import BasePromptTemplate
import logging

logger = logging.getLogger(__name__)

class CritiquePrompt(BasePromptTemplate):
    """
    Builds a prompt for critiquing an idea, response, or user-generated content.
    """

    def __init__(self, context: str, tool_output: str = "", tone: str = "Analytical", persona: str = "Critical Reviewer"):
        super().__init__(tone, persona, context, tool_output)
        logger.debug(f"[CritiquePrompt] Initialized with context='{context[:30]}...', tone='{tone}', persona='{persona}'")

    def set_tone(self):
        logger.debug("[CritiquePrompt] Setting tone and persona")
        # Set tone and persona appropriate for constructive critique
        self.prompt.tone = self.tone
        self.prompt.persona = self.persona

    def add_task_instruction(self):
        logger.debug("[CritiquePrompt] Adding task instruction")
        # Instruct the model to evaluate the provided content
        self.prompt.task = "Critique the content with constructive feedback and suggestions."

    def inject_context(self):
        logger.debug("[CritiquePrompt] Injecting context")
        # Provide the item or subject to be critiqued
        self.prompt.context = self.context

    def inject_tool_output(self):
        logger.debug("[CritiquePrompt] Injecting tool output")
        # Include any analysis or metrics generated by supporting tools
        self.prompt.tool_output = self.tool_output